[user]
  name = YOUR_NAME
  email = YOUR_CENTRAL_REPO_USER_EMAIL
[core]
  excludesfile = ABSOLUTE_PATH_TO_HOME/.gitignore_global
[alias]
  # Make rebase safe on osx https://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
  rebase = -c core.trustctime=false rebase

  # A couple of shortcuts because I used to use svn
  ci = commit
  co = checkout
  st = status

  # Log, but with tree, colors, and changed files list
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --name-status

  # Log, just with tree
  tree = log --graph --oneline --all --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

  # Pull HEAD of master in all submodules
  sp = submodule foreach --recursive git fetch origin --tags && git checkout master && git pull
  
  # Initialize all submodules
  su = submodule update --init --recursive

  # Clone submodules when cloning a repository
  clone = clone --recurse

  # Words that are too long for me to bother with them
  br = branch
  ch = cherry-pick

  # Rebase local changes on top of anything you pull without nagging about local uncommitted changes
  pr = !git stash && git pull --rebase && git stash pop

  # Fast forward pull - should be the default imho
  pf = pull --ff-only

  # Set upstream when pushing - should be default imho
  pu = push -u

  # Merge without implicitly creating merge commits
  mf = merge --ff-only
  
  # Delete a remote branch
  bd = push origin --delete

[credential]
  # Use OSX keychain to remember passwords
  helper = osxkeychain

[push]
  # Assume that local branch name matches remote branch name
  default = current

[hub]
  # Use https for github (obviously)
  protocol = https
